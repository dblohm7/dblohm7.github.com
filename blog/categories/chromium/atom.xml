<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: chromium | Aaron Klotz at Mozilla]]></title>
  <link href="http://dblohm7.ca/blog/categories/chromium/atom.xml" rel="self"/>
  <link href="http://dblohm7.ca/"/>
  <updated>2015-03-11T22:14:36-06:00</updated>
  <id>http://dblohm7.ca/</id>
  <author>
    <name><![CDATA[Aaron Klotz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WaitMessage Considered Harmful]]></title>
    <link href="http://dblohm7.ca/blog/2015/03/11/waitmessage-considered-harmful/"/>
    <updated>2015-03-11T17:00:00-06:00</updated>
    <id>http://dblohm7.ca/blog/2015/03/11/waitmessage-considered-harmful</id>
    <content type="html"><![CDATA[<p>I could apologize for the clickbaity title, but I won&rsquo;t. I have no shame.</p>

<p>Today I want to talk about some code that we imported from Chromium some time
ago: I replaced it in Mozilla&rsquo;s codebase a while back in <a title="IPC message pump for windows should use WinUtils::WaitForMessage" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1072752">bug 1072752</a>:</p>

<p><figure class='code'><figcaption><span> (message_pump_win.cc)</span> <a href='/downloads/code/message_pump_win.cc'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>    <span class="c1">// A WM_* message is available.</span>
</span><span class='line'>    <span class="c1">// If a parent child relationship exists between windows across threads</span>
</span><span class='line'>    <span class="c1">// then their thread inputs are implicitly attached.</span>
</span><span class='line'>    <span class="c1">// This causes the MsgWaitForMultipleObjectsEx API to return indicating</span>
</span><span class='line'>    <span class="c1">// that messages are ready for processing (Specifically, mouse messages</span>
</span><span class='line'>    <span class="c1">// intended for the child window may appear if the child window has</span>
</span><span class='line'>    <span class="c1">// capture).</span>
</span><span class='line'>    <span class="c1">// The subsequent PeekMessages call may fail to return any messages thus</span>
</span><span class='line'>    <span class="c1">// causing us to enter a tight loop at times.</span>
</span><span class='line'>    <span class="c1">// The WaitMessage call below is a workaround to give the child window</span>
</span><span class='line'>    <span class="c1">// some time to process its input messages.</span>
</span><span class='line'>    <span class="n">MSG</span> <span class="n">msg</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>    <span class="n">DWORD</span> <span class="n">queue_status</span> <span class="o">=</span> <span class="n">GetQueueStatus</span><span class="p">(</span><span class="n">QS_MOUSE</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">HIWORD</span><span class="p">(</span><span class="n">queue_status</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">QS_MOUSE</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>        <span class="o">!</span><span class="n">PeekMessage</span><span class="p">(</span><span class="o">&amp;</span><span class="n">msg</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">WM_MOUSEFIRST</span><span class="p">,</span> <span class="n">WM_MOUSELAST</span><span class="p">,</span> <span class="n">PM_NOREMOVE</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">WaitMessage</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>This code is wrong. <strong>Very</strong> wrong.</p>
]]></content>
  </entry>
  
</feed>
